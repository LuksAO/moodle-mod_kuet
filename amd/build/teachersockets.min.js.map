{"version":3,"file":"teachersockets.min.js","sources":["../src/teachersockets.js"],"sourcesContent":["\"use strict\";\n\nimport jQuery from 'jquery';\nimport Templates from 'core/templates';\nimport Notification from 'core/notification';\nimport {get_string as getString, get_strings as getStrings} from 'core/str';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport Ajax from 'core/ajax';\nimport Encryptor from 'mod_jqshow/encryptor';\nimport Database from 'mod_jqshow/database';\nimport mEvent from 'core/event';\n\nlet REGION = {\n    MESSAGEBOX: '#message-box',\n    USERLIST: '[data-region=\"active-users\"]',\n    COUNTUSERS: '#countusers',\n    TEACHERCANVASCONTENT: '[data-region=\"teacher-canvas-content\"]', // This root.\n    TEACHERCANVAS: '[data-region=\"teacher-canvas\"]',\n    TEACHERPANEL: '[data-region=\"teacher-panel\"]',\n    SESSIONCONTROLER: '[data-region=\"session-controller\"]',\n    SESSIONRESUME: '[data-region=\"session-resume\"]',\n    LISTRESULTS: '[data-region=\"list-results\"]',\n    RACERESULTS: '[data-region=\"race-results\"]',\n    SWITCHS: '.showhide-action',\n};\n\nlet ACTION = {\n    BACKSESSION: '[data-action=\"back-session\"]',\n    INITSESSION: '[data-action=\"init-session\"]',\n    ENDSESSION: '[data-action=\"end-session\"]'\n};\n\nlet SERVICES = {\n    ACTIVESESSION: 'mod_jqshow_activesession',\n    GETALLQUESTIONS: 'mod_jqshow_session_getallquestions',\n    NEXTQUESTION: 'mod_jqshow_nextquestion',\n    FIRSTQUESTION: 'mod_jqshow_firstquestion',\n    FINISHSESSION: 'mod_jqshow_finishsession',\n    DELETERESPONSES: 'mod_jqshow_deleteresponses',\n    JUMPTOQUESTION: 'mod_jqshow_jumptoquestion',\n    GETSESSIONRESUME: 'mod_jqshow_getsessionresume',\n    GETLISTRESULTS: 'mod_jqshow_getlistresults',\n    GETGROUPLISTRESULTS: 'mod_jqshow_getgrouplistresults',\n    GETQUESTIONSTATISTICS: 'mod_jqshow_getquestionstatistics',\n    GETSESSIONCONFIG: 'mod_jqshow_getsession',\n    GETPROVISIONALRANKING: 'mod_jqshow_getprovisionalranking',\n    GETFINALRANKING: 'mod_jqshow_getfinalranking',\n    GETRACERESULTS: 'mod_jqshow_getraceresults'\n};\n\nlet TEMPLATES = {\n    LOADING: 'core/overlay_loading',\n    SUCCESS: 'core/notification_success',\n    ERROR: 'core/notification_error',\n    PARTICIPANT: 'mod_jqshow/session/manual/waitingroom/participant',\n    QUESTION: 'mod_jqshow/questions/encasement',\n    SESSIONRESUME: 'mod_jqshow/session/sessionresume',\n    LISTRESULTS: 'mod_jqshow/session/listresults',\n    PROVISIONALRANKING: 'mod_jqshow/ranking/provisional',\n    RACERESULTS: 'mod_jqshow/session/raceresults'\n};\n\nlet portUrl = '8080'; // It is rewritten in the constructor.\nlet userid = null;\nlet usersocketid = null;\nlet username = null;\nlet userimage = null;\nlet messageBox = null;\nlet countusers = null;\nlet cmid = null;\nlet sid = null;\nlet db = null;\nlet questionsJqids = [];\nlet waitingRoom = true;\nlet currentQuestionJqid = null;\nlet nextQuestionJqid = null;\nlet sessionMode = null;\nlet showRankingBetweenQuestions = false;\nlet showRankingBetweenQuestionsSwitch = false;\nlet showRankingFinal = false;\nlet groupMode = false;\nlet currentQuestionDataForRace = {};\n\n/**\n * @constructor\n * @param {String} region\n * @param {String} port\n * @param {String} sessionmode\n * @param {Boolean} groupmode\n */\nfunction Sockets(region, port, sessionmode, groupmode) {\n    this.root = jQuery(region);\n    portUrl = port;\n    userid = this.root[0].dataset.userid;\n    username = this.root[0].dataset.username;\n    userimage = this.root[0].dataset.userimage;\n    cmid = this.root[0].dataset.cmid;\n    sid = this.root[0].dataset.sid;\n    messageBox = this.root.find(REGION.MESSAGEBOX);\n    countusers = this.root.find(REGION.COUNTUSERS);\n    groupMode = groupmode;\n    sessionMode = sessionmode;\n    switch (sessionMode) {\n        case 'inactive_manual':\n        default:\n            showRankingBetweenQuestions = false;\n            showRankingBetweenQuestionsSwitch = false;\n            showRankingFinal = false;\n            break;\n        case 'podium_manual':\n        case 'race_manual': {\n            let request = {\n                methodname: SERVICES.GETSESSIONCONFIG,\n                args: {\n                    sid: sid,\n                    cmid: cmid\n                }\n            };\n            Ajax.call([request])[0].done(function(response) {\n                if (response.session.showgraderanking === 1) {\n                    showRankingBetweenQuestions = true;\n                }\n                if (response.session.showfinalgrade === 1) {\n                    showRankingFinal = true;\n                }\n            }).fail(Notification.exception);\n            break;\n        }\n    }\n    this.measuringSpeed(); // TODO extend to the whole mod.\n    this.disableDevTools(); // TODO extend to the whole mod.\n    this.initSockets();\n    this.cleanMessages(); // TODO only for develop.\n    this.initListeners();\n}\n\nSockets.prototype.cleanMessages = function() {\n    setInterval(function() {\n        messageBox.find(':first-child').remove();\n    }, 10000);\n};\n\nSockets.prototype.disableDevTools = function(){\n    document.addEventListener('contextmenu', (e) => e.preventDefault());\n    document.onkeydown = (e) => {\n        return !(event.keyCode === 123 ||\n            this.ctrlShiftKey(e, 'I') ||\n            this.ctrlShiftKey(e, 'J') ||\n            this.ctrlShiftKey(e, 'C') ||\n            (e.ctrlKey && e.keyCode === 'U'.charCodeAt(0)));\n    };\n};\n\nSockets.prototype.ctrlShiftKey = function(e, keyCode) {\n    return e.ctrlKey && e.shiftKey && e.keyCode === keyCode.charCodeAt(0);\n};\n\nSockets.prototype.measuringSpeed = function() {\n    let connection = navigator.connection || navigator.mozConnection || navigator.webkitConnection;\n    if (connection) {\n        let typeConnection = connection.effectiveType;\n        let speedMbps = connection.downlink;\n        // eslint-disable-next-line no-console\n        console.log(\"Type of Connection: \" + typeConnection, \"Estimated speed: \" + speedMbps + \" Mbps\");\n        if (speedMbps < 1) {\n            let reason = {\n                effectiveType: connection.effectiveType,\n                downlink: connection.downlink\n            };\n            getString('lowspeed', 'mod_jqshow', reason).done((s) => {\n                messageBox.append(\n                    '<div class=\"alert alert-danger\" role=\"alert\">' + s + '</div>'\n                );\n            });\n        }\n    } else {\n        // eslint-disable-next-line no-console\n        console.log(\"Connection speed detection is not supported in this browser.\");\n    }\n};\n\nSockets.prototype.backSession = function() {\n    const stringkeys = [\n        {key: 'backtopanelfromsession', component: 'mod_jqshow'},\n        {key: 'backtopanelfromsession_desc', component: 'mod_jqshow'},\n        {key: 'confirm', component: 'mod_jqshow'}\n    ];\n    getStrings(stringkeys).then((langStrings) => {\n        return ModalFactory.create({\n            title: langStrings[0],\n            body: langStrings[1],\n            type: ModalFactory.types.SAVE_CANCEL\n        }).then(modal => {\n            modal.setSaveButtonText(langStrings[2]);\n            modal.getRoot().on(ModalEvents.save, () => {\n                let request = {\n                    methodname: SERVICES.ACTIVESESSION,\n                    args: {\n                        cmid: cmid,\n                        sessionid: sid\n                    }\n                };\n                Ajax.call([request])[0].done(function() {\n                    window.location.replace(M.cfg.wwwroot + '/mod/jqshow/view.php?id=' + cmid);\n                }).fail(Notification.exception);\n            });\n            modal.getRoot().on(ModalEvents.hidden, () => {\n                modal.destroy();\n            });\n            return modal;\n        });\n    }).done(function(modal) {\n        modal.show();\n        // eslint-disable-next-line no-restricted-globals\n    }).fail(Notification.exception);\n};\n\n/* ****************** */\n\n/** @type {jQuery} The jQuery node for the page region. */\nSockets.prototype.root = null;\n\nSockets.prototype.initSockets = function() {\n    let that = this;\n    this.root.find(ACTION.BACKSESSION).on('click', this.backSession);\n\n    db = Database.initDb(sid, userid);\n    Sockets.prototype.webSocket = new WebSocket(\n        'wss://' + M.cfg.wwwroot.replace(/^https?:\\/\\//, '') + ':' + portUrl + '/jqshow'\n    );\n\n    Sockets.prototype.webSocket.onopen = function() { // Waitingroom.\n        /* The first and second questions are obtained.\n        When the teacher clicks on init session, the teacher will send the first question over the socket to all\n        students, and will get the 3rd question. When a student answers a question, a service will be called to save the answer\n        and progress, and the teacher will be informed via the socket. When the teacher clicks on next question,\n        the 2nd question will be sent by socket to all students, and the 3th question will be obtained.\n        The questions will be stored in the teacher's data storage, you can even store the user's answers so that you\n        don't have to call a service at the end for the ranking.\n        */\n\n        let request = {\n            methodname: SERVICES.FIRSTQUESTION,\n            args: {\n                cmid: cmid,\n                sessionid: sid\n            }\n        };\n        Ajax.call([request])[0].done(function(firstquestion) {\n            let data = {\n                jqid: firstquestion.jqid,\n                value: firstquestion\n            };\n            db.add('questions', data);\n            questionsJqids.push(firstquestion.jqid);\n            currentQuestionJqid = firstquestion.jqid;\n            that.setCurrentQuestion(firstquestion.jqid);\n            that.getNextQuestion(firstquestion.jqid);\n            that.root.find(ACTION.INITSESSION).removeClass('disabled');\n            that.root.find(ACTION.INITSESSION).on('click', that.initSession);\n            that.root.find(ACTION.ENDSESSION).on('click', that.endSession);\n        }).fail(Notification.exception);\n    };\n\n    Sockets.prototype.webSocket.onmessage = function(ev) {\n        // TODO Refactor.\n        let msgDecrypt = Encryptor.decrypt(ev.data);\n        let response = JSON.parse(msgDecrypt); // PHP sends Json data.\n        switch (response.action) {\n            case 'connect':\n                // The server has returned the connected status, it is time to identify yourself.\n                if (response.usersocketid !== undefined) {\n                    usersocketid = response.usersocketid;\n                    let msg = {\n                        'userid': userid,\n                        'name': username,\n                        'pic': userimage, // TODO encrypt.\n                        'isteacher': true,\n                        'cmid': cmid,\n                        'sid': sid,\n                        'usersocketid': usersocketid,\n                        'action': 'newuser'\n                    };\n                    Sockets.prototype.sendMessageSocket(JSON.stringify(msg));\n                }\n                break;\n            case 'newuser': {\n                let identifier = jQuery(REGION.USERLIST);\n                let data = response.students;\n                identifier.html('');\n                if (waitingRoom === false) {\n                    Sockets.prototype.normalizeUser(response.usersocketid);\n                }\n                jQuery.each(data, function(i, student) {\n                    let templateContext = {\n                        'usersocketid': student.usersocketid,\n                        'userimage': student.picture,\n                        'userfullname': student.name,\n                    };\n                    Templates.render(TEMPLATES.PARTICIPANT, templateContext).then(function(html) {\n                        identifier.append(html);\n                    }).fail(Notification.exception);\n                });\n                countusers.html(response.count);\n                break;\n            }\n            case 'countusers':\n                countusers.html(response.count);\n                break;\n            case 'studentQuestionEnd':\n                messageBox.append('<div>' + response.message + '</div>');\n                // TODO mark the corresponding tab on the scoreboard if it is career mode.\n                if (sessionMode === 'race_manual') {\n                    Sockets.prototype.raceResults();\n                }\n                break;\n            case 'userdisconnected':\n                jQuery('[data-userid=\"' + response.usersocketid + '\"]').remove();\n                countusers.html(response.count);\n                messageBox.append('<div>' + response.message + '</div>');\n                break;\n            case 'alreadyteacher':\n                messageBox.append(\n                    '<div class=\"alert alert-danger\" role=\"alert\">' + response.message + '</div>'\n                );\n                break;\n            case 'pauseQuestion':\n                dispatchEvent(new Event('pauseQuestion_' + response.jqid));\n                break;\n            case 'playQuestion':\n                dispatchEvent(new Event('playQuestion_' + response.jqid));\n                break;\n            case 'showAnswers':\n                dispatchEvent(new Event('showAnswers_' + response.jqid));\n                break;\n            case 'hideAnswers':\n                dispatchEvent(new Event('hideAnswers_' + response.jqid));\n                break;\n            case 'showStatistics':\n                dispatchEvent(new Event('showStatistics_' + response.jqid));\n                break;\n            case 'hideStatistics':\n                dispatchEvent(new Event('hideStatistics_' + response.jqid));\n                break;\n            case 'showFeedback':\n                dispatchEvent(new Event('showFeedback_' + response.jqid));\n                break;\n            case 'hideFeedback':\n                dispatchEvent(new Event('hideFeedback_' + response.jqid));\n                break;\n            default:\n                break;\n        }\n        messageBox[0].scrollTop = messageBox[0].scrollHeight;\n    };\n\n    Sockets.prototype.webSocket.onerror = function() {\n        getString('system_error', 'mod_jqshow').done((s) => {\n            messageBox.append(\n                '<div class=\"alert alert-danger\" role=\"alert\">' + s + '</div>'\n            );\n        });\n    };\n\n    Sockets.prototype.webSocket.onclose = function(ev) {\n        let reason = {\n            reason: ev.reason,\n            code: ev.code\n        };\n        getString('connection_closed', 'mod_jqshow', reason).done((s) => {\n            jQuery(REGION.TEACHERCANVASCONTENT).prepend(\n                '<div class=\"alert alert-danger\" role=\"alert\">' + s + '</div>'\n            );\n        });\n    };\n};\n\nSockets.prototype.initListeners = function() {\n    let that = this;\n    addEventListener('nextQuestion', () => {\n        switch (sessionMode) {\n            case 'inactive_programmed':\n            case 'inactive_manual':\n            default:\n                that.nextQuestion();\n                break;\n            case 'podium_manual':\n            case 'podium_programmed':\n            case 'race_manual':\n            case 'race_programmed':\n                that.manageNext();\n                break;\n        }\n    }, false);\n    addEventListener('pauseQuestionSelf', () => {\n        that.pauseQuestion();\n    }, false);\n    addEventListener('playQuestionSelf', () => {\n        that.playQuestion();\n    }, false);\n    addEventListener('resendSelf', () => {\n        that.resendSelf();\n    }, false);\n    addEventListener('jumpTo', (e) => {\n        that.jumpTo(e.detail.jumpTo);\n    }, false);\n    addEventListener('teacherQuestionEndSelf', () => {\n        if (sessionMode === 'race_manual') {\n            currentQuestionDataForRace.isteacher = true;\n            Templates.render(TEMPLATES.QUESTION, currentQuestionDataForRace).then(function(html, js) {\n                let identifier = jQuery(REGION.TEACHERCANVAS);\n                identifier.html(html);\n                Templates.runTemplateJS(js);\n                jQuery(REGION.SWITCHS).removeClass('disabled');\n                that.questionEnd();\n            }).fail(Notification.exception);\n        } else {\n            that.questionEnd();\n        }\n\n    }, false);\n    addEventListener('showAnswersSelf', () => {\n        that.showAnswers();\n    }, false);\n    addEventListener('hideAnswersSelf', () => {\n        that.hideAnswers();\n    }, false);\n    addEventListener('showStatisticsSelf', () => {\n        that.showStatistics();\n    }, false);\n    addEventListener('hideStatisticsSelf', () => {\n        that.hideStatistics();\n    }, false);\n    addEventListener('showFeedbackSelf', () => {\n        that.showFeedback();\n    }, false);\n    addEventListener('hideFeedbackSelf', () => {\n        that.hideFeedback();\n    }, false);\n    addEventListener('endSession', () => {\n        that.endSession();\n    }, {once: true});\n};\n\nSockets.prototype.setCurrentQuestion = function(currentQuestion) {\n    let data = {\n        state: 'currentQuestion',\n        value: currentQuestion\n    };\n    db.update('statequestions', data);\n};\n\nSockets.prototype.setNextQuestion = function(nextQuestion) {\n    let data = {\n        state: 'nextQuestion',\n        value: nextQuestion\n    };\n    db.update('statequestions', data);\n};\n\nSockets.prototype.setEndSession = function(endData) {\n    db.delete('statequestions', 'nextQuestion');\n    let data = {\n        state: 'endSession',\n        value: endData\n    };\n    db.update('statequestions', data);\n    showRankingBetweenQuestionsSwitch = false;\n};\n\nSockets.prototype.getNextQuestion = function(jqid) {\n    let that = this;\n    let request = {\n        methodname: SERVICES.NEXTQUESTION,\n        args: {\n            cmid: cmid,\n            sessionid: sid,\n            jqid: jqid,\n            manual: true\n        }\n    };\n    nextQuestionJqid = null;\n    Ajax.call([request])[0].done(function(nextquestion) {\n        if (nextquestion.endsession !== true) {\n            let data = {\n                jqid: nextquestion.jqid,\n                value: nextquestion\n            };\n            db.add('questions', data);\n            nextQuestionJqid = nextquestion.jqid;\n            that.setNextQuestion(nextquestion.jqid);\n        } else {\n            // End session.\n            nextQuestionJqid = null;\n            that.setEndSession(nextquestion);\n        }\n    }).fail(Notification.exception);\n};\n\nSockets.prototype.initSession = function() {\n    db.delete('statequestions', 'endSession');\n    const stringkeys = [\n        {key: 'init_session', component: 'mod_jqshow'},\n        {key: 'init_session_desc', component: 'mod_jqshow'},\n        {key: 'confirm', component: 'mod_jqshow'},\n        {key: 'sessionstarted', component: 'mod_jqshow'},\n        {key: 'sessionstarted_info', component: 'mod_jqshow'}\n    ];\n    getStrings(stringkeys).then((langStrings) => {\n        return ModalFactory.create({\n            title: langStrings[0],\n            body: langStrings[1],\n            type: ModalFactory.types.SAVE_CANCEL\n        }).then(modal => {\n            modal.setSaveButtonText(langStrings[2]);\n            modal.getRoot().on(ModalEvents.save, () => {\n                let firstQuestion = db.get('questions', currentQuestionJqid);\n                firstQuestion.onsuccess = function() {\n                    let msg = {\n                        'action': 'question',\n                        'sid': sid,\n                        'context': firstQuestion.result\n                    };\n                    Sockets.prototype.sendMessageSocket(JSON.stringify(msg));\n                    Templates.render(TEMPLATES.LOADING, {visible: true}).done(function(html) {\n                        Sockets.prototype.initPanel();\n                        let identifier = jQuery(REGION.TEACHERCANVAS);\n                        identifier.append(html);\n                        currentQuestionJqid = firstQuestion.result.jqid;\n                        firstQuestion.result.value.isteacher = true;\n                        currentQuestionDataForRace = firstQuestion.result.value;\n                        if (sessionMode === 'podium_manual' || sessionMode === 'inactive_manual') {\n                            Templates.render(TEMPLATES.QUESTION, firstQuestion.result.value).then(function(html, js) {\n                                identifier.html(html);\n                                Templates.runTemplateJS(js);\n                                jQuery(REGION.LOADING).remove();\n                                mEvent.notifyFilterContentUpdated(document.querySelector(REGION.TEACHERCANVAS));\n                            }).fail(Notification.exception);\n                        }\n                        if (sessionMode === 'race_manual') {\n                            Sockets.prototype.raceResults();\n                        }\n                        jQuery(REGION.TEACHERCANVASCONTENT).find('.content-title h2').html(langStrings[3]);\n                        jQuery(REGION.TEACHERCANVASCONTENT).find('.content-title small').html(langStrings[4]);\n                        jQuery(ACTION.BACKSESSION).remove();\n                        jQuery(ACTION.INITSESSION).remove();\n                        jQuery(ACTION.ENDSESSION).removeClass('hidden').removeClass('disabled');\n                        waitingRoom = false;\n                        if (showRankingBetweenQuestions) {\n                            showRankingBetweenQuestionsSwitch = true;\n                        }\n                    });\n                };\n            });\n            modal.getRoot().on(ModalEvents.hidden, () => {\n                modal.destroy();\n            });\n            return modal;\n        });\n    }).done(function(modal) {\n        modal.show();\n        // eslint-disable-next-line no-restricted-globals\n    }).fail(Notification.exception);\n};\n\nSockets.prototype.initPanel = function() {\n    let requestResume = {\n        methodname: SERVICES.GETSESSIONRESUME,\n        args: {\n            sid: sid,\n            cmid: cmid,\n        }\n    };\n    Ajax.call([requestResume])[0].done(function(responseResume) {\n        Templates.render(TEMPLATES.SESSIONRESUME, responseResume).then(function(html) {\n            jQuery(REGION.SESSIONRESUME).append(html);\n        });\n    });\n    let methodname = SERVICES.GETLISTRESULTS;\n    if (groupMode === true) {\n        methodname = SERVICES.GETGROUPLISTRESULTS;\n    }\n    setInterval(function() {\n        let requestResults = {\n            methodname: methodname,\n            args: {\n                sid: sid,\n                cmid: cmid,\n            }\n        };\n        Ajax.call([requestResults])[0].done(function(responseResults) {\n            Templates.render(TEMPLATES.LISTRESULTS, responseResults).then(function(html) {\n                jQuery(REGION.LISTRESULTS).html(html);\n            });\n        });\n    }, 20000);\n    jQuery(REGION.TEACHERPANEL).removeClass('d-none');\n};\n\nSockets.prototype.endSession = function() {\n    const stringkeys = [\n        {key: 'end_session', component: 'mod_jqshow'},\n        {key: 'end_session_manual_desc', component: 'mod_jqshow'},\n        {key: 'confirm', component: 'mod_jqshow'},\n        {key: 'end_session_error', component: 'mod_jqshow'}\n    ];\n    getStrings(stringkeys).then((langStrings) => {\n        return ModalFactory.create({\n            title: langStrings[0],\n            body: langStrings[1],\n            type: ModalFactory.types.SAVE_CANCEL\n        }).then(modal => {\n            modal.setSaveButtonText(langStrings[2]);\n            modal.getRoot().on(ModalEvents.save, () => {\n                let request = {\n                    methodname: SERVICES.FINISHSESSION,\n                    args: {\n                        cmid: cmid,\n                        sessionid: sid\n                    }\n                };\n                Ajax.call([request])[0].done(function(response) {\n                    if (response.finished === true) {\n                        let deleteDb = db.deleteDatabase();\n                        deleteDb.onerror = function(event) {\n                            // eslint-disable-next-line no-console\n                            console.error(\"Error deleting database.\", event);\n                        };\n                        deleteDb.onsuccess = function() {\n                            window.location.replace(M.cfg.wwwroot + '/mod/jqshow/view.php?id=' + cmid);\n                        };\n                    } else {\n                        Notification.alert('Error', langStrings[3], langStrings[2]);\n                    }\n                }).fail(Notification.exception);\n            });\n            modal.getRoot().on(ModalEvents.hidden, () => {\n                modal.destroy();\n            });\n            return modal;\n        });\n    }).done(function(modal) {\n        modal.show();\n        // eslint-disable-next-line no-restricted-globals\n    }).fail(Notification.exception);\n};\n\nSockets.prototype.nextQuestion = function() {\n    let that = this;\n    if (nextQuestionJqid === null) {\n        this.getNextQuestion(currentQuestionJqid);\n    }\n    let nextQuestion = db.get('statequestions', 'nextQuestion');\n    nextQuestion.onsuccess = function() {\n        if (nextQuestion.result !== undefined) {\n            let nextQuestionData = db.get('questions', nextQuestion.result.value);\n            nextQuestionData.onsuccess = function() {\n                let msg = {\n                    'action': 'question',\n                    'sid': sid,\n                    'context': nextQuestionData.result\n                };\n                currentQuestionDataForRace = nextQuestionData.result.value;\n                Sockets.prototype.sendMessageSocket(JSON.stringify(msg));\n                Templates.render(TEMPLATES.LOADING, {visible: true}).done(function(html) {\n                    let identifier = jQuery(REGION.TEACHERCANVAS);\n                    identifier.append(html);\n                    currentQuestionJqid = nextQuestionData.result.jqid;\n                    // The following question is marked as current.\n                    that.setCurrentQuestion(nextQuestionData.result.jqid);\n                    // And get the next question to store it.\n                    that.getNextQuestion(nextQuestionData.result.jqid);\n                    if (sessionMode === 'podium_manual' || sessionMode === 'inactive_manual') {\n                        nextQuestionData.result.value.isteacher = true;\n                        // Render questin for teacher.\n                        Templates.render(TEMPLATES.QUESTION, nextQuestionData.result.value).then(function(html, js) {\n                            identifier.html(html);\n                            Templates.runTemplateJS(js);\n                            mEvent.notifyFilterContentUpdated(document.querySelector(REGION.TEACHERCANVAS));\n                            jQuery(REGION.LOADING).remove();\n                        }).fail(Notification.exception);\n                    }\n                    if (sessionMode === 'race_manual') {\n                        Sockets.prototype.raceResults();\n                    }\n                });\n            };\n        } else {\n            let endSession = db.get('statequestions', 'endSession');\n            if (showRankingFinal === false) {\n                endSession.onsuccess = function() {\n                    let msg = {\n                        'action': 'endSession',\n                        'sid': sid,\n                        'context': endSession.result\n                    };\n                    Sockets.prototype.sendMessageSocket(JSON.stringify(msg));\n                    Templates.render(TEMPLATES.LOADING, {visible: true}).done(function(html) {\n                        let identifier = jQuery(REGION.TEACHERCANVAS);\n                        identifier.append(html);\n                        currentQuestionJqid = null;\n                        db.delete('statequestions', 'currentQuestion');\n                        that.setEndSession(endSession.result);\n                        endSession.result.value.isteacher = true;\n                        Templates.render(TEMPLATES.QUESTION, endSession.result.value).then(function(html, js) {\n                            identifier.html(html);\n                            Templates.runTemplateJS(js);\n                            jQuery(REGION.LOADING).remove();\n                        }).fail(Notification.exception);\n                    });\n                };\n            } else {\n                endSession.onsuccess = function() {\n                    let request = {\n                        methodname: SERVICES.GETFINALRANKING,\n                        args: {\n                            sid: sid,\n                            cmid: cmid\n                        }\n                    };\n                    Ajax.call([request])[0].done(function(finalRanking) {\n                        endSession.result.value = finalRanking;\n                        let msg = {\n                            'action': 'endSession',\n                            'sid': sid,\n                            'context': endSession.result\n                        };\n                        Sockets.prototype.sendMessageSocket(JSON.stringify(msg));\n                        Templates.render(TEMPLATES.LOADING, {visible: true}).done(function(html) {\n                            let identifier = jQuery(REGION.TEACHERCANVAS);\n                            identifier.append(html);\n                            currentQuestionJqid = null;\n                            db.delete('statequestions', 'currentQuestion');\n                            that.setEndSession(endSession.result);\n                            endSession.result.value.isteacher = true;\n                            Templates.render(TEMPLATES.QUESTION, endSession.result.value).then(function(html, js) {\n                                identifier.html(html);\n                                Templates.runTemplateJS(js);\n                                jQuery(REGION.LOADING).remove();\n                            }).fail(Notification.exception);\n                        });\n                    }).fail(Notification.exception);\n                };\n            }\n        }\n    };\n};\n\nSockets.prototype.raceResults = function() {\n    let identifier = jQuery(REGION.TEACHERCANVAS);\n    let request = {\n        methodname: SERVICES.GETRACERESULTS,\n        args: {\n            sid: sid,\n            cmid: cmid\n        }\n    };\n    Ajax.call([request])[0].done(function(response) {\n        response.raceresults = true;\n        response.isteacher = true;\n        response.programmedmode = false;\n        response.sessionprogress = currentQuestionDataForRace.sessionprogress;\n        // eslint-disable-next-line camelcase\n        response.question_index_string = currentQuestionDataForRace.question_index_string;\n        response.numquestions = currentQuestionDataForRace.numquestions;\n        Templates.render(TEMPLATES.QUESTION, response).then((html, js) => {\n            let scrollUsersTop = 0;\n            let scrollQuestionsLeft = 0;\n            if (document.querySelector('#content-users') !== null) {\n                scrollUsersTop = document.querySelector('#content-users').scrollTop;\n                scrollQuestionsLeft = document.querySelector('#questions-list').scrollLeft;\n            }\n            identifier.html(html);\n            Templates.runTemplateJS(js);\n            let newScrollUsers = document.querySelector('#content-users');\n            let newScrollQuestions = document.querySelector('#questions-list');\n            let scrollUsers = document.querySelector('#content-users');\n            let questions = document.querySelectorAll('.content-responses');\n            scrollUsers.addEventListener('scroll', function() {\n                questions.forEach((question) => {\n                    question.scrollTop = scrollUsers.scrollTop;\n                });\n            }, {passive: true});\n            newScrollUsers.scrollTop = scrollUsersTop;\n            newScrollQuestions.scrollLeft = scrollQuestionsLeft;\n        }).fail(Notification.exception);\n    }).fail(Notification.exception);\n};\n\nSockets.prototype.manageNext = function() {\n    let that = this;\n    if (showRankingBetweenQuestions === false) {\n        that.nextQuestion();\n    } else {\n        if (showRankingBetweenQuestionsSwitch === false) {\n            that.nextQuestion();\n            showRankingBetweenQuestionsSwitch = true;\n        } else {\n            let request = {\n                methodname: SERVICES.GETPROVISIONALRANKING,\n                args: {\n                    sid: sid,\n                    cmid: cmid,\n                    jqid: currentQuestionJqid\n                }\n            };\n            Ajax.call([request])[0].done(function(provisionalRanking) {\n                let msg = {\n                    'action': 'ranking',\n                    'sid': sid,\n                    'context': provisionalRanking\n                };\n                Sockets.prototype.sendMessageSocket(JSON.stringify(msg));\n                showRankingBetweenQuestionsSwitch = false;\n                Templates.render(TEMPLATES.LOADING, {visible: true}).done(function(html) {\n                    let identifier = jQuery(REGION.TEACHERCANVAS);\n                    identifier.append(html);\n                    provisionalRanking.isteacher = true;\n                    Templates.render(TEMPLATES.PROVISIONALRANKING, provisionalRanking).then(function(html, js) {\n                        identifier.html(html);\n                        Templates.runTemplateJS(js);\n                        jQuery(REGION.LOADING).remove();\n                    }).fail(Notification.exception);\n                });\n            }).fail(Notification.exception);\n        }\n    }\n};\n\nSockets.prototype.pauseQuestion = function() {\n    let msg = {\n        'action': 'pauseQuestion',\n        'sid': sid,\n        'jqid': currentQuestionJqid\n    };\n    Sockets.prototype.sendMessageSocket(JSON.stringify(msg));\n};\n\nSockets.prototype.playQuestion = function() {\n    let msg = {\n        'action': 'playQuestion',\n        'sid': sid,\n        'jqid': currentQuestionJqid\n    };\n    Sockets.prototype.sendMessageSocket(JSON.stringify(msg));\n};\n\nSockets.prototype.resendSelf = function() {\n    let request = {\n        methodname: SERVICES.DELETERESPONSES,\n        args: {\n            cmid: cmid,\n            sessionid: sid,\n            jqid: currentQuestionJqid\n        }\n    };\n    Ajax.call([request])[0].done(function(response) {\n        if (response.deleted === true) {\n            let currentQuestionData = db.get('questions', currentQuestionJqid);\n            currentQuestionData.onsuccess = function() {\n                let msg = {\n                    'action': 'question',\n                    'sid': sid,\n                    'context': currentQuestionData.result\n                };\n                Sockets.prototype.sendMessageSocket(JSON.stringify(msg));\n                showRankingBetweenQuestionsSwitch = true;\n                currentQuestionDataForRace = currentQuestionData.result.value;\n                if (sessionMode === 'race_manual') {\n                    Sockets.prototype.raceResults();\n                } else {\n                    Templates.render(TEMPLATES.LOADING, {visible: true}).done(function(html) {\n                        let identifier = jQuery(REGION.TEACHERCANVAS);\n                        identifier.append(html);\n                        currentQuestionData.result.value.isteacher = true;\n                        Templates.render(TEMPLATES.QUESTION, currentQuestionData.result.value).then(function(html, js) {\n                            identifier.html(html);\n                            Templates.runTemplateJS(js);\n                            mEvent.notifyFilterContentUpdated(document.querySelector(REGION.TEACHERCANVAS));\n                            jQuery(REGION.LOADING).remove();\n                        }).fail(Notification.exception);\n                    });\n                }\n            };\n        }\n    }).fail(Notification.exception);\n};\n\nSockets.prototype.jumpTo = function(questionNumber) {\n    let that = this;\n    let request = {\n        methodname: SERVICES.JUMPTOQUESTION,\n        args: {\n            cmid: cmid,\n            sessionid: sid,\n            position: questionNumber,\n            manual: true\n        }\n    };\n    nextQuestionJqid = null;\n    Ajax.call([request])[0].done(function(question) {\n        let data = {\n            jqid: question.jqid,\n            value: question\n        };\n        db.add('questions', data);\n        currentQuestionJqid = question.jqid;\n        that.setCurrentQuestion(question.jqid);\n        that.getNextQuestion(question.jqid);\n        let msg = {\n            'action': 'question',\n            'sid': sid,\n            'context': data\n        };\n        Sockets.prototype.sendMessageSocket(JSON.stringify(msg));\n        showRankingBetweenQuestionsSwitch = true;\n        Templates.render(TEMPLATES.LOADING, {visible: true}).done(function(html) {\n            let identifier = jQuery(REGION.TEACHERCANVAS);\n            identifier.append(html);\n            question.isteacher = true;\n            currentQuestionDataForRace = question;\n            if (sessionMode === 'race_manual') {\n                Sockets.prototype.raceResults();\n            } else {\n                Templates.render(TEMPLATES.QUESTION, question).then(function(html, js) {\n                    identifier.html(html);\n                    Templates.runTemplateJS(js);\n                    mEvent.notifyFilterContentUpdated(document.querySelector(REGION.TEACHERCANVAS));\n                    jQuery(REGION.LOADING).remove();\n                }).fail(Notification.exception);\n            }\n        });\n    }).fail(Notification.exception);\n};\n\nSockets.prototype.questionEnd = function() {\n    let request = {\n        methodname: SERVICES.GETQUESTIONSTATISTICS,\n        args: {\n            sid: sid,\n            jqid: currentQuestionJqid\n        }\n    };\n    Ajax.call([request])[0].done(function(response) {\n        let msg = {\n            'action': 'teacherQuestionEnd',\n            'sid': sid,\n            'jqid': currentQuestionJqid,\n            'statistics': response.statistics\n        };\n        Sockets.prototype.sendMessageSocket(JSON.stringify(msg));\n        dispatchEvent(new CustomEvent('teacherQuestionEnd_' + currentQuestionJqid, {\n            \"detail\": {\"statistics\": response.statistics}\n        }));\n    }).fail(Notification.exception);\n};\n\nSockets.prototype.showAnswers = function() {\n    let msg = {\n        'action': 'showAnswers',\n        'sid': sid,\n        'jqid': currentQuestionJqid\n    };\n    Sockets.prototype.sendMessageSocket(JSON.stringify(msg));\n};\n\nSockets.prototype.hideAnswers = function() {\n    let msg = {\n        'action': 'hideAnswers',\n        'sid': sid,\n        'jqid': currentQuestionJqid\n    };\n    Sockets.prototype.sendMessageSocket(JSON.stringify(msg));\n};\n\nSockets.prototype.showStatistics = function() {\n    let msg = {\n        'action': 'showStatistics',\n        'sid': sid,\n        'jqid': currentQuestionJqid\n    };\n    Sockets.prototype.sendMessageSocket(JSON.stringify(msg));\n};\n\nSockets.prototype.hideStatistics = function() {\n    let msg = {\n        'action': 'hideStatistics',\n        'sid': sid,\n        'jqid': currentQuestionJqid\n    };\n    Sockets.prototype.sendMessageSocket(JSON.stringify(msg));\n};\n\nSockets.prototype.showFeedback = function() {\n    let msg = {\n        'action': 'showFeedback',\n        'sid': sid,\n        'jqid': currentQuestionJqid\n    };\n    Sockets.prototype.sendMessageSocket(JSON.stringify(msg));\n};\n\nSockets.prototype.hideFeedback = function() {\n    let msg = {\n        'action': 'hideFeedback',\n        'sid': sid,\n        'jqid': currentQuestionJqid\n    };\n    Sockets.prototype.sendMessageSocket(JSON.stringify(msg));\n};\n\nSockets.prototype.normalizeUser = function(usersocketid) {\n    let currentQuestion = db.get('statequestions', 'currentQuestion');\n    currentQuestion.onsuccess = function() {\n        let currentQuestiondata = db.get('questions', currentQuestion.result.value);\n        currentQuestiondata.onsuccess = function() {\n            let msg = {\n                'action': 'normalizeUser',\n                'sid': sid,\n                'ofs': true, // Only for student.\n                'usersocketid': usersocketid,\n                'context': currentQuestiondata.result\n            };\n            Sockets.prototype.sendMessageSocket(JSON.stringify(msg));\n        };\n    };\n};\n\nSockets.prototype.sendMessageSocket = function(msg) {\n    this.webSocket.send(msg);\n};\n\nexport const teacherInitSockets = (region, port, sessionmode, groupmode) => {\n    return new Sockets(region, port, sessionmode, groupmode);\n};\n"],"names":["_interopRequireDefault","obj","__esModule","default","Object","defineProperty","_exports","value","teacherInitSockets","_jquery","_templates","_notification","_modal_factory","_modal_events","_ajax","_encryptor","_database","_event","REGION","MESSAGEBOX","USERLIST","COUNTUSERS","TEACHERCANVASCONTENT","TEACHERCANVAS","TEACHERPANEL","SESSIONCONTROLER","SESSIONRESUME","LISTRESULTS","RACERESULTS","SWITCHS","ACTION","SERVICES","ACTIVESESSION","GETALLQUESTIONS","NEXTQUESTION","FIRSTQUESTION","FINISHSESSION","DELETERESPONSES","JUMPTOQUESTION","GETSESSIONRESUME","GETLISTRESULTS","GETGROUPLISTRESULTS","GETQUESTIONSTATISTICS","GETSESSIONCONFIG","GETPROVISIONALRANKING","GETFINALRANKING","GETRACERESULTS","TEMPLATES","portUrl","userid","usersocketid","username","userimage","messageBox","countusers","cmid","sid","db","questionsJqids","waitingRoom","currentQuestionJqid","nextQuestionJqid","sessionMode","showRankingBetweenQuestions","showRankingBetweenQuestionsSwitch","showRankingFinal","groupMode","currentQuestionDataForRace","Sockets","region","port","sessionmode","groupmode","this","root","jQuery","dataset","find","request","methodname","args","Ajax","call","done","response","session","showgraderanking","showfinalgrade","fail","Notification","exception","measuringSpeed","disableDevTools","initSockets","cleanMessages","initListeners","prototype","setInterval","remove","_this","document","addEventListener","e","preventDefault","onkeydown","event","keyCode","ctrlShiftKey","ctrlKey","charCodeAt","shiftKey","connection","navigator","mozConnection","webkitConnection","typeConnection","effectiveType","speedMbps","downlink","console","log","reason","getString","get_string","s","append","backSession","getStrings","key","component","then","langStrings","ModalFactory","create","title","body","type","types","SAVE_CANCEL","modal","setSaveButtonText","getRoot","on","ModalEvents","save","sessionid","window","location","replace","M","cfg","wwwroot","hidden","destroy","show","that","Database","initDb","webSocket","WebSocket","onopen","firstquestion","data","jqid","add","push","setCurrentQuestion","getNextQuestion","removeClass","initSession","endSession","onmessage","ev","msgDecrypt","Encryptor","decrypt","JSON","parse","action","undefined","msg","name","pic","isteacher","sendMessageSocket","stringify","identifier","students","html","normalizeUser","each","i","student","templateContext","picture","userfullname","Templates","render","count","message","raceResults","dispatchEvent","Event","scrollTop","scrollHeight","onerror","onclose","code","prepend","nextQuestion","manageNext","pauseQuestion","playQuestion","resendSelf","jumpTo","detail","js","runTemplateJS","questionEnd","showAnswers","hideAnswers","showStatistics","hideStatistics","showFeedback","hideFeedback","once","currentQuestion","state","update","setNextQuestion","setEndSession","endData","delete","manual","nextquestion","endsession","firstQuestion","get","onsuccess","context","result","visible","initPanel","LOADING","mEvent","notifyFilterContentUpdated","querySelector","requestResume","responseResume","requestResults","responseResults","finished","deleteDb","deleteDatabase","error","alert","nextQuestionData","finalRanking","raceresults","programmedmode","sessionprogress","question_index_string","numquestions","scrollUsersTop","scrollQuestionsLeft","scrollLeft","newScrollUsers","newScrollQuestions","scrollUsers","questions","querySelectorAll","forEach","question","passive","provisionalRanking","deleted","currentQuestionData","questionNumber","position","statistics","CustomEvent","currentQuestiondata","ofs","send"],"mappings":"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"}