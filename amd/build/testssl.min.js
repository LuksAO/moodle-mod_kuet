/**
 *
 * @module    mod_kuet/testssl
 * @copyright  2023 Proyecto UNIMOODLE
 * @author     UNIMOODLE Group (Coordinator) <direccion.area.estrategia.digital@uva.es>
 * @author     3IPUNT <contacte@tresipunt.com>
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */
define("mod_kuet/testssl",["jquery","core/str","core/notification"],(function($,str,notification){var socketUrl="",portUrl="8080";function TestSockets(region,socketurl,port){this.root=$(region),socketUrl=socketurl,portUrl=port,this.initTestSockets()}TestSockets.prototype.normalizeSocketUrl=function(socketUrl,port){var jsUrl=new URL(socketUrl);return"https:"===jsUrl.protocol?(jsUrl.port=port,jsUrl.protocol="wss:","/"===jsUrl.pathname?jsUrl.pathname=jsUrl.pathname+"testkuet":jsUrl.pathname=jsUrl.pathname+"/testkuet",jsUrl.toString()):(str.get_strings([{key:"httpsrequired",component:"mod_kuet"}]).done((function(strings){(messageBox=this.root.find("#testresult")).append('<div class="alert alert-danger" role="alert">'+strings[0]+"</div>")})).fail(notification.exception),"")},TestSockets.prototype.root=null;var messageBox=null;return TestSockets.prototype.initTestSockets=function(){messageBox=this.root.find("#testresult");var normalizeSocketUrl=TestSockets.prototype.normalizeSocketUrl(socketUrl,portUrl);TestSockets.prototype.webSocket=new WebSocket(normalizeSocketUrl),TestSockets.prototype.webSocket.onopen=function(){str.get_strings([{key:"validcertificates",component:"mod_kuet"}]).done((function(strings){messageBox.append('<div class="alert alert-success" role="alert">'+strings[0]+"</div>")})).fail(notification.exception)},TestSockets.prototype.webSocket.onerror=function(event){console.error(event),str.get_strings([{key:"invalidcertificates",component:"mod_kuet"}]).done((function(strings){messageBox.append('<div class="alert alert-danger" role="alert">'+strings[0]+"</div>")})).fail(notification.exception)},TestSockets.prototype.webSocket.onclose=function(){str.get_strings([{key:"connectionclosed",component:"mod_kuet"}]).done((function(strings){messageBox.append('<div class="alert alert-warning" role="alert">'+strings[0]+"</div>")})).fail(notification.exception)}},TestSockets.prototype.sendMessageSocket=function(msg){this.webSocket.send(msg)},{initTestSockets:function(region,socketurl,port){return new TestSockets(region,socketurl,port)}}}));

//# sourceMappingURL=testssl.min.js.map