{"version":3,"file":"testssl.min.js","sources":["../src/testssl.js"],"sourcesContent":["define(['jquery', 'core/str', 'core/notification'], function($, str, notification) {\n    \"use strict\";\n\n    let socketUrl = '';\n    let portUrl = '8080';\n\n    /**\n     * @constructor\n     * @param {String} region\n     * @param {String} socketurl\n     * @param {String} port\n     */\n    function TestSockets(region, socketurl, port) {\n        this.root = $(region);\n        socketUrl = socketurl;\n        portUrl = port;\n        this.initTestSockets();\n    }\n\n    /** @type {jQuery} The jQuery node for the page region. */\n    TestSockets.prototype.root = null;\n\n    let messageBox = null;\n\n    TestSockets.prototype.initTestSockets = function() {\n        messageBox = this.root.find('#testresult');\n\n        TestSockets.prototype.webSocket = new WebSocket(\n            'wss://' + socketUrl.replace(/^https?:\\/\\//, '') + ':' + portUrl + '/testjqshow'\n        );\n\n        TestSockets.prototype.webSocket.onopen = function() {\n            str.get_strings([\n                {key: 'validcertificates', component: 'mod_jqshow'}\n            ]).done(function(strings) {\n                messageBox.append('<div class=\"alert alert-success\" role=\"alert\">' + strings[0] + '</div>');\n            }).fail(notification.exception);\n        };\n\n        TestSockets.prototype.webSocket.onerror = function(event) {\n            // eslint-disable-next-line no-console\n            console.error(event);\n            str.get_strings([\n                {key: 'invalidcertificates', component: 'mod_jqshow'}\n            ]).done(function(strings) {\n                messageBox.append('<div class=\"alert alert-danger\" role=\"alert\">' + strings[0] + '</div>');\n            }).fail(notification.exception);\n        };\n\n        TestSockets.prototype.webSocket.onclose = function() {\n            str.get_strings([\n                {key: 'connectionclosed', component: 'mod_jqshow'}\n            ]).done(function(strings) {\n                messageBox.append('<div class=\"alert alert-warning\" role=\"alert\">' + strings[0] + '</div>');\n            }).fail(notification.exception);\n        };\n    };\n\n    TestSockets.prototype.sendMessageSocket = function(msg) {\n        this.webSocket.send(msg);\n    };\n\n    return {\n        /**\n         * @param {String} region\n         * @param {String} socketurl\n         * @param {String} port\n         * @return {TestSockets}\n         */\n        initTestSockets: function(region, socketurl, port) {\n            return new TestSockets(region, socketurl, port);\n        },\n    };\n});\n"],"names":["define","$","str","notification","socketUrl","portUrl","TestSockets","region","socketurl","port","this","root","initTestSockets","prototype","messageBox","find","webSocket","WebSocket","replace","onopen","get_strings","key","component","done","strings","append","fail","exception","onerror","event","console","error","onclose","sendMessageSocket","msg","send"],"mappings":"AAAAA,OAAO,qBAAA,CAAC,SAAU,WAAY,sBAAsB,SAASC,EAAGC,IAAKC,cAGjE,IAAIC,UAAY,GACZC,QAAU,OAQd,SAASC,YAAYC,OAAQC,UAAWC,MACpCC,KAAKC,KAAOV,EAAEM,QACdH,UAAYI,UACZH,QAAUI,KACVC,KAAKE,iBACT,CAGAN,YAAYO,UAAUF,KAAO,KAE7B,IAAIG,WAAa,KAwCjB,OAtCAR,YAAYO,UAAUD,gBAAkB,WACpCE,WAAaJ,KAAKC,KAAKI,KAAK,eAE5BT,YAAYO,UAAUG,UAAY,IAAIC,UAClC,SAAWb,UAAUc,QAAQ,eAAgB,IAAM,IAAMb,QAAU,eAGvEC,YAAYO,UAAUG,UAAUG,OAAS,WACrCjB,IAAIkB,YAAY,CACZ,CAACC,IAAK,oBAAqBC,UAAW,gBACvCC,MAAK,SAASC,SACbV,WAAWW,OAAO,iDAAmDD,QAAQ,GAAK,SACrF,IAAEE,KAAKvB,aAAawB,YAGzBrB,YAAYO,UAAUG,UAAUY,QAAU,SAASC,OAE/CC,QAAQC,MAAMF,OACd3B,IAAIkB,YAAY,CACZ,CAACC,IAAK,sBAAuBC,UAAW,gBACzCC,MAAK,SAASC,SACbV,WAAWW,OAAO,gDAAkDD,QAAQ,GAAK,SACpF,IAAEE,KAAKvB,aAAawB,YAGzBrB,YAAYO,UAAUG,UAAUgB,QAAU,WACtC9B,IAAIkB,YAAY,CACZ,CAACC,IAAK,mBAAoBC,UAAW,gBACtCC,MAAK,SAASC,SACbV,WAAWW,OAAO,iDAAmDD,QAAQ,GAAK,SACrF,IAAEE,KAAKvB,aAAawB,aAI7BrB,YAAYO,UAAUoB,kBAAoB,SAASC,KAC/CxB,KAAKM,UAAUmB,KAAKD,MAGjB,CAOHtB,gBAAiB,SAASL,OAAQC,UAAWC,MACzC,OAAO,IAAIH,YAAYC,OAAQC,UAAWC,KAC9C,EAER"}