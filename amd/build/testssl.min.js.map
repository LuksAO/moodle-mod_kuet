{"version":3,"file":"testssl.min.js","sources":["../src/testssl.js"],"sourcesContent":["define(['jquery', 'core/str', 'core/notification'], function($, str, notification) {\n    \"use strict\";\n\n    let portUrl = '8080';\n\n    /**\n     * @constructor\n     * @param {String} region\n     * @param {String} port\n     */\n    function TestSockets(region, port) {\n        this.root = $(region);\n        portUrl = port;\n        this.initTestSockets();\n    }\n\n    /** @type {jQuery} The jQuery node for the page region. */\n    TestSockets.prototype.root = null;\n\n    let messageBox = null;\n\n    TestSockets.prototype.initTestSockets = function() {\n        messageBox = this.root.find('#testresult');\n\n        TestSockets.prototype.webSocket = new WebSocket(\n            'wss://' + M.cfg.wwwroot.replace(/^https?:\\/\\//, '') + ':' + portUrl + '/testjqshow'\n        );\n\n        TestSockets.prototype.webSocket.onopen = function() {\n            str.get_strings([\n                {key: 'validcertificates', component: 'mod_jqshow'}\n            ]).done(function(strings) {\n                messageBox.append('<div class=\"alert alert-success\" role=\"alert\">' + strings[0] + '</div>');\n                let msg = {\n                    'action': 'shutdownTest',\n                };\n                TestSockets.prototype.sendMessageSocket(JSON.stringify(msg));\n            }).fail(notification.exception);\n        };\n\n        TestSockets.prototype.webSocket.onerror = function() {\n            str.get_strings([\n                {key: 'invalidcertificates', component: 'mod_jqshow'}\n            ]).done(function(strings) {\n                messageBox.append('<div class=\"alert alert-danger\" role=\"alert\">' + strings[0] + '</div>');\n            }).fail(notification.exception);\n        };\n\n        TestSockets.prototype.webSocket.onclose = function() {\n            str.get_strings([\n                {key: 'socketclosed', component: 'mod_jqshow'}\n            ]).done(function(strings) {\n                messageBox.append('<div class=\"alert alert-warning\" role=\"alert\">' + strings[0] + '</div>');\n            }).fail(notification.exception);\n        };\n    };\n\n    TestSockets.prototype.sendMessageSocket = function(msg) {\n        this.webSocket.send(msg);\n    };\n\n    return {\n        /**\n         * @param {String} region\n         * @param {String} port\n         * @return {TestSockets}\n         */\n        initTestSockets: function(region, port) {\n            return new TestSockets(region, port);\n        },\n    };\n});\n"],"names":["define","$","str","notification","portUrl","TestSockets","region","port","this","root","initTestSockets","prototype","messageBox","find","webSocket","WebSocket","M","cfg","wwwroot","replace","onopen","get_strings","key","component","done","strings","append","sendMessageSocket","JSON","stringify","action","fail","exception","onerror","onclose","msg","send"],"mappings":"AAAAA,OAAO,qBAAA,CAAC,SAAU,WAAY,sBAAsB,SAASC,EAAGC,IAAKC,cAGjE,IAAIC,QAAU,OAOd,SAASC,YAAYC,OAAQC,MACzBC,KAAKC,KAAOR,EAAEK,QACdF,QAAUG,KACVC,KAAKE,iBACT,CAGAL,YAAYM,UAAUF,KAAO,KAE7B,IAAIG,WAAa,KA0CjB,OAxCAP,YAAYM,UAAUD,gBAAkB,WACpCE,WAAaJ,KAAKC,KAAKI,KAAK,eAE5BR,YAAYM,UAAUG,UAAY,IAAIC,UAClC,SAAWC,EAAEC,IAAIC,QAAQC,QAAQ,eAAgB,IAAM,IAAMf,QAAU,eAG3EC,YAAYM,UAAUG,UAAUM,OAAS,WACrClB,IAAImB,YAAY,CACZ,CAACC,IAAK,oBAAqBC,UAAW,gBACvCC,MAAK,SAASC,SACbb,WAAWc,OAAO,iDAAmDD,QAAQ,GAAK,UAIlFpB,YAAYM,UAAUgB,kBAAkBC,KAAKC,UAHnC,CACNC,OAAU,iBAGjB,IAAEC,KAAK5B,aAAa6B,YAGzB3B,YAAYM,UAAUG,UAAUmB,QAAU,WACtC/B,IAAImB,YAAY,CACZ,CAACC,IAAK,sBAAuBC,UAAW,gBACzCC,MAAK,SAASC,SACbb,WAAWc,OAAO,gDAAkDD,QAAQ,GAAK,SACpF,IAAEM,KAAK5B,aAAa6B,YAGzB3B,YAAYM,UAAUG,UAAUoB,QAAU,WACtChC,IAAImB,YAAY,CACZ,CAACC,IAAK,eAAgBC,UAAW,gBAClCC,MAAK,SAASC,SACbb,WAAWc,OAAO,iDAAmDD,QAAQ,GAAK,SACrF,IAAEM,KAAK5B,aAAa6B,aAI7B3B,YAAYM,UAAUgB,kBAAoB,SAASQ,KAC/C3B,KAAKM,UAAUsB,KAAKD,MAGjB,CAMHzB,gBAAiB,SAASJ,OAAQC,MAC9B,OAAO,IAAIF,YAAYC,OAAQC,KACnC,EAER"}