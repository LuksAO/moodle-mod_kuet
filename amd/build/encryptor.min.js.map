{"version":3,"file":"encryptor.min.js","sources":["../src/encryptor.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n// Project implemented by the \"Recovery, Transformation and Resilience Plan.\n// Funded by the European Union - Next GenerationEU\".\n//\n// Produced by the UNIMOODLE University Group: Universities of\n// Valladolid, Complutense de Madrid, UPV/EHU, León, Salamanca,\n// Illes Balears, Valencia, Rey Juan Carlos, La Laguna, Zaragoza, Málaga,\n// Córdoba, Extremadura, Vigo, Las Palmas de Gran Canaria y Burgos.\n\n/**\n *\n * @module    mod_jqshow/encryptor\n * @copyright  2023 Proyecto UNIMOODLE\n * @author     UNIMOODLE Group (Coordinator) <direccion.area.estrategia.digital@uva.es>\n * @author     3IPUNT <contacte@tresipunt.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n\"use strict\";\n\nconst password = 'elktkktagqes';\nconst abc = 'abcdefghijklmnopqrstuvwxyz0123456789=ABCDEFGHIJKLMNOPQRSTUVWXYZ/+-*';\n\nexport const decrypt = function(text) {\n    const arr = text.split('');\n    const arrPass = password.split('');\n    let lastPassLetter = 0;\n    let decrypted = '';\n    for (let i = 0; i < arr.length; i++) {\n        const letter = arr[i];\n        const passwordLetter = arrPass[lastPassLetter];\n        const temp = getInvertedLetterFromAlphabetForLetter(passwordLetter, letter);\n        if (temp) {\n            decrypted += temp;\n        } else {\n            return null;\n        }\n        if (lastPassLetter === (arrPass.length - 1)) {\n            lastPassLetter = 0;\n        } else {\n            lastPassLetter++;\n        }\n    }\n    return atob(decrypted);\n};\n\nlet getInvertedLetterFromAlphabetForLetter = function(letter, letterToChange) {\n    const posLetter = abc.indexOf(letter);\n    if (posLetter == -1) {\n        // eslint-disable-next-line no-console\n        console.log('Password letter ' + letter + ' not allowed.');\n        return null;\n    }\n\n    const part1 = abc.substring(posLetter, abc.length);\n    const part2 = abc.substring(0, posLetter);\n    const newABC = '' + part1 + '' + part2;\n    const posLetterToChange = newABC.indexOf(letterToChange);\n\n    if (posLetterToChange == -1) {\n        // eslint-disable-next-line no-console\n        console.log('Password letter ' + letter + ' not allowed.');\n        return null;\n    }\n\n    return abc.split('')[posLetterToChange];\n};\n\nexport const encrypt = function(text) {\n    const base64 = btoa(text);\n    const arr = base64.split('');\n    const arrPass = password.split('');\n    let lastPassLetter = 0;\n    let encrypted = '';\n    for (let i = 0; i < arr.length; i++) {\n        const letter = arr[i];\n        const passwordLetter = arrPass[lastPassLetter];\n        const temp = getLetterFromAlphabetForLetter(passwordLetter, letter);\n        if (temp) {\n            encrypted += temp;\n        } else {\n            return null;\n        }\n        if (lastPassLetter === (arrPass.length - 1)) {\n            lastPassLetter = 0;\n        } else {\n            lastPassLetter++;\n        }\n    }\n    return encrypted;\n};\n\nlet getLetterFromAlphabetForLetter = function(letter, letterToChange) {\n    const posLetter = abc.indexOf(letter);\n    if (posLetter == -1) {\n        // eslint-disable-next-line no-console\n        console.log('Password letter ' + letter + ' not allowed.');\n        return null;\n    }\n    const posLetterToChange = abc.indexOf(letterToChange);\n    if (posLetterToChange == -1) {\n        // eslint-disable-next-line no-console\n        console.log('Password letter ' + letter + ' not allowed.');\n        return null;\n    }\n    const part1 = abc.substring(posLetter, abc.length);\n    const part2 = abc.substring(0, posLetter);\n    const newABC = '' + part1 + '' + part2;\n    return newABC.split('')[posLetterToChange];\n};\nexport default {\n    encrypt,\n    decrypt\n};\n"],"names":["Object","defineProperty","_exports","value","encrypt","default","decrypt","abc","text","arr","split","arrPass","lastPassLetter","decrypted","i","length","letter","passwordLetter","temp","getInvertedLetterFromAlphabetForLetter","atob","letterToChange","posLetter","indexOf","console","log","posLetterToChange","substring","btoa","encrypted","getLetterFromAlphabetForLetter","_default"],"mappings":"8DAgCaA,OAAAC,eAAAC,SAAA,aAAA,CAAAC,OAAA,IAAAD,SAAAE,QAAAF,SAAAG,QAAAH,SAAAI,aAAA,EAEb,IACMC,IAAM,sEAECD,QAAU,SAASE,MAK5B,IAJA,IAAMC,IAAMD,KAAKE,MAAM,IACjBC,QALO,eAKYD,MAAM,IAC3BE,eAAiB,EACjBC,UAAY,GACPC,EAAI,EAAGA,EAAIL,IAAIM,OAAQD,IAAK,CACjC,IAAME,OAASP,IAAIK,GACbG,eAAiBN,QAAQC,gBACzBM,KAAOC,uCAAuCF,eAAgBD,QACpE,IAAIE,KAGA,OAAO,KAFPL,WAAaK,KAIbN,iBAAoBD,QAAQI,OAAS,EACrCH,eAAiB,EAEjBA,gBAER,CACA,OAAOQ,KAAKP,YACdX,SAAAI,QAAAA,QAEF,IAAIa,uCAAyC,SAASH,OAAQK,gBAC1D,IAAMC,UAAYf,IAAIgB,QAAQP,QAC9B,IAAkB,GAAdM,UAGA,OADAE,QAAQC,IAAI,mBAAqBT,OAAS,iBACnC,KAGX,IAGMU,mBADS,GAFDnB,IAAIoB,UAAUL,UAAWf,IAAIQ,QAC7BR,IAAIoB,UAAU,EAAGL,YAEEC,QAAQF,gBAEzC,OAA0B,GAAtBK,mBAEAF,QAAQC,IAAI,mBAAqBT,OAAS,iBACnC,MAGJT,IAAIG,MAAM,IAAIgB,oBAGZtB,QAAU,SAASI,MAM5B,IALA,IACMC,IADSmB,KAAKpB,MACDE,MAAM,IACnBC,QAnDO,eAmDYD,MAAM,IAC3BE,eAAiB,EACjBiB,UAAY,GACPf,EAAI,EAAGA,EAAIL,IAAIM,OAAQD,IAAK,CACjC,IAAME,OAASP,IAAIK,GACbG,eAAiBN,QAAQC,gBACzBM,KAAOY,+BAA+Bb,eAAgBD,QAC5D,IAAIE,KAGA,OAAO,KAFPW,WAAaX,KAIbN,iBAAoBD,QAAQI,OAAS,EACrCH,eAAiB,EAEjBA,gBAER,CACA,OAAOiB,WACT3B,SAAAE,QAAAA,QAEF,IAAI0B,+BAAiC,SAASd,OAAQK,gBAClD,IAAMC,UAAYf,IAAIgB,QAAQP,QAC9B,IAAkB,GAAdM,UAGA,OADAE,QAAQC,IAAI,mBAAqBT,OAAS,iBACnC,KAEX,IAAMU,kBAAoBnB,IAAIgB,QAAQF,gBACtC,OAA0B,GAAtBK,mBAEAF,QAAQC,IAAI,mBAAqBT,OAAS,iBACnC,OAII,GAFDT,IAAIoB,UAAUL,UAAWf,IAAIQ,QAC7BR,IAAIoB,UAAU,EAAGL,YAEjBZ,MAAM,IAAIgB,oBAC1BK,SACa,CACX3B,QAAAA,QACAE,QAAAA,SACH,OAAAJ,SAAAG,QAAA0B,SAAA7B,SAAAG,OAAA"}